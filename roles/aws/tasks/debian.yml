---
- name: determine system architecture
  set_fact:
    aws_cli_arch: >-
      {{
        {
          'aarch64': 'aarch64',
          'arm64': 'aarch64',
          'x86_64': 'x86_64',
          'amd64': 'x86_64'
        }.get(ansible_architecture, 'invalid')
      }}

- name: fail if architecture is not supported
  fail:
    msg: "Unsupported architecture: {{ ansible_architecture }}. Supported values are ['aarch64', 'arm64', 'x86_64', 'amd64']."
  when: aws_cli_arch == 'invalid'

- name: install gnu-tar
  become_user: "{{ ansible_env.USER }}"
  homebrew:
    name:
      - gnu-tar
    state: latest

- name: unzip the aws cli installer
  unarchive:
    src: "{{ aws_cli_zip_url }}"
    dest: /tmp
    remote_src: true
  changed_when: false
  environment:
    PATH: "/opt/homebrew/bin:{{ ansible_env.PATH }}"

- name: install the aws cli
  become: true
  command:
    cmd: ./install --bin-dir /usr/local/bin --install-dir {{ aws_cli_install_dir }} --update
    chdir: /tmp/aws
  changed_when: false

- name: cleanup temporary installation files and zip
  become: true
  file:
    path: "{{ item }}"
    state: absent
  changed_when: false
  loop:
    - "/tmp/aws"
