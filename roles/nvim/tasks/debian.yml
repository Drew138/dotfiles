---
- name: install dependencies
  become: true
  apt:
    name:
      - xclip
      - cmake
      - make
      - gettext
      - python3-pip
      - python3.10-venv
    state: latest

- name: check if nvim is installed
  stat:
    path: /usr/local/bin/nvim
  register: nvim_is_installed
  changed_when: not nvim_is_installed.stat.exists
  notify:
    - install nvim packages, lsps, debuggers, linters and formatters

- name: clone nvim repository
  become: true
  become_user: "{{ ansible_env.USER }}"
  git:
    repo: "https://github.com/neovim/neovim.git"
    dest: "{{ ansible_env.HOME }}/dev/neovim"
    version: "{{ nvim_release_branch }}"
    depth: 1
    clone: true
    update: true

# - name: clean previous neovim build
#   become: true
#   shell:
#     cmd: |
#       sudo make distclean
#     chdir: "{{ ansible_env.HOME }}/dev/neovim"
#   changed_when: false

- name: build and install nvim
  become: true
  shell:
    cmd: |
      sudo make distclean
      sudo make CMAKE_BUILD_TYPE=RelWithDebInfo
      sudo make install
    chdir: "{{ ansible_env.HOME }}/dev/neovim"
  changed_when: false

- name: install pynvim
  pip:
    name: pynvim
    state: latest

- name: install global npm packages required by neovim
  shell: "source {{ ansible_env.HOME }}/.nvm/nvm.sh && npm install -g {{ item }}"
  args:
    executable: /bin/bash
  loop:
    - "tree-sitter-cli"
  changed_when: false

- name: create nvim symlink
  file:
    src: "{{ ansible_env.HOME }}/.dotfiles/roles/nvim/files"
    dest: "{{ ansible_env.HOME }}/.config/nvim"
    owner: "{{ ansible_env.USER }}"
    state: link
    force: true
