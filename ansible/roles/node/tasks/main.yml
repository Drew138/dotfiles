---
- name: install nodejs prerequisites (linux)
  become_user: "{{ host_user }}"
  apt:
    name:
      - apt-transport-https
      - gcc
      - g++
      - make
    state: present
  when: is_debian_distro

# - name: add nodejs apt key (linux)
#   become_user: "{{ host_user }}"
#   apt_key:
#     url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
#     state: present
#   when: is_debian_distro
#
# - name: add nodejs repository (linux)
#   become_user: "{{ host_user }}"
#   apt_repository:
#     repo: deb https://deb.nodesource.com/node_19.x {{ ansible_lsb.codename }} main
#     state: present
#     update_cache: true
#   when: is_debian_distro
#
# - name: install nodejs (linux)
#   become_user: "{{ host_user }}"
#   apt:
#     name: nodejs
#     state: present
#   when: is_debian_distro
#
# - name: install node (macos)
#   homebrew:
#     name:
#       - node
#     state: present
#   register: result
#   until: result is successful
#   when: is_macos and homebrew_check.stat.exists
#
# - name: install nvm
#   become_user: "{{ host_user }}"
#   ansible.builtin.shell: >
#     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
#   args:
#     warn: false
#     creates: "{{ user_home }}/.nvm/nvm.sh"


- name: install nvm
  become: false
  ansible.builtin.shell: >
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.39.1/install.sh | bash
  args:
    executable: /bin/bash
    chdir: "{{ user_home }}"
    creates: "{{ user_home }}/.nvm/nvm.sh"

- name: install node
  become: false
  shell: >
    . {{ user_home }}/.nvm/nvm.sh && nvm install {{ item }}
  args:
    executable: /bin/bash
    chdir: "{{ user_home }}"
    creates: "{{ user_home }}/.nvm/versions/{{ item }}"
  loop:
    - 19.9.0

...
