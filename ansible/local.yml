---
- hosts: localhost

  roles:
    # - nerdfonts
    # - utils
    # - nvim
    # - docker
    # - node
    # - fzf
    # - tmux
    # - fd
    # - flatpak
    # - repositories
    # - casks
    # - kitty
    # - zsh
    # - starship
    # - rust
    # - cpp
    # - pyenv
    # - go
    - git
    - gh

  vars:
    has_user_repositories: "{{ user_repositories == 'true' }}"
    has_kitty_terminal: "{{ kitty_terminal == 'true' }}"
    has_extra_software: "{{ extra_software == 'true' }}"
    is_macos: "{{ ansible_distribution == 'MacOSX' }}"
    is_debian_distro: "{{ ansible_distribution in ['Ubuntu', 'Pop!_OS'] }}"
    host_user: "{{ ansible_env.SUDO_USER }}"
    allow_world_readable_tmpfiles: true

  pre_tasks:
    - name: set user home directory (linux)
      set_fact:
        user_home: "/home/{{ host_user }}"
      when: is_debian_distro

    - name: set user home directory (macos)
      set_fact:
        user_home: "/Users/{{ host_user }}"
      when: is_macos

    - name: update repositories
      apt: update_cache=yes
      become: true
      when: is_debian_distro

    - name: ensuring homebrew is installed
      stat:
        path: /usr/local/bin/brew
      register: homebrew_check
      when: is_macos

    - name: updating homebrew
      become: true
      become_user: "{{ host_user }}"
      homebrew:
        update_homebrew: true
      when: is_macos and homebrew_check.stat.exists

    - name: upgrading homebrew packages
      become: true
      become_user: "{{ host_user }}"
      homebrew:
        upgrade_all: true
      register: result
      until: result is successful
      when: is_macos and homebrew_check.stat.exists

    - name: download dotfiles repository ssh
      become: true
      become_user: "{{ host_user }}"
      git:
        repo: git@github.com:Drew138/.dotfiles.git
        dest: "{{ user_home }}/.dotfiles"
        clone: true
        update: true
      when: has_user_repositories

    - name: download dotfiles repository http
      become: true
      become_user: "{{ host_user }}"
      git:
        repo: https://github.com/Drew138/.dotfiles.git
        dest: "{{ user_home }}/.dotfiles"
        clone: true
        update: true
      when: not has_user_repositories
