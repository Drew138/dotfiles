---
name: ci

on: [push]

jobs:
  check-roles:
    # needs: lint
    runs-on: ubuntu-latest
    outputs:
      roles: ${{ steps.roles.outputs.roles }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: install jq
        run: sudo apt-get install jq

      - name: list ansible roles
        id: roles
        run: |
          echo 'roles<<EOF' >> "${GITHUB_OUTPUT}"
          roles=$(ls -1 -d */ | sed 's:/$::' | jq -R -s 'split("\n")[:-1]')
          echo $roles>> "${GITHUB_OUTPUT}"
          echo 'EOF' >> "${GITHUB_OUTPUT}"
        working-directory: ./roles/

  molecule:
    needs: check-roles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        role: ${{ fromJson(needs.check-roles.outputs.roles) }}
    steps:
      - name: check out the codebase
        uses: actions/checkout@v4

      - name: set up python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: install test dependencies
        run: pip3 install \
          ansible \
          molecule \
          docker \
          "molecule-plugins[docker]"

      - name: run molecule tests
        run: molecule test
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
          MOLECULE_ROLE: ${{ matrix.role }}
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: check out the codebase
  #       uses: actions/checkout@v4
  #
  #     - name: set up python 3
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.x'
  #
  #     - name: install test dependencies.
  #       run: pip3 install yamllint
  #
  #     - name: lint code
  #       run: |
  #         yamllint .
