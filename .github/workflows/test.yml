---
# name: deploy laravel
# on:
#   push:
#     branches: [main]
#
# jobs:
#   example_matrix:
#     strategy:
#       matrix:
#         version: [10, 12, 14]
#         os: [macos-latest, windows-latest]
#     runs-on: ${{ matrix.os }}

name: test ansible roles

on: [push]

jobs:
  check-roles:
    runs-on: ubuntu-latest
    outputs:
      roles: ${{ steps.roles.outputs.roles }}
    steps:
      - uses: actions/checkout@v2

      - name: list ansible roles
        id: roles
        run: |
          {
            echo 'roles<<EOF'
            ls -1 | sed 's:/$::' | awk '{printf "\"%s\",\n", $0}' | sed '$s/,$//' | awk 'BEGIN {print "["} {print $0} END {print "]"}'
            echo 'EOF'
          } >> "${GITHUB_OUTPUT}"
        working-directory: ./ansible/roles/

  test:
    runs-on: ubuntu-20.04
    # strategy:
    #   matrix:
    #     roles: ${{ needs.check-roles.steps.roles.outputs.roles }}
    steps:
      # - run: echo ${{ matrix.role }}
      - run: echo ${{ needs.check-roles.outputs.roles }}

  # test:
  #   needs:
  #     - lint
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     matrix:
  #       image:
  #         - alpine
  #         - amazonlinux
  #         - debian
  #         - centos
  #         - fedora
  #         - opensuse
  #         - ubuntu
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #       with:
  #         path: "${{ github.repository }}"
  #     - name: molecule
  #       uses: robertdebock/molecule-action@6.0.0
  #       with:
  #         image: "${{ matrix.image }}"
  #         options: parallel
  #         scenario: my_specific_scenario

  # vagrant-up:
  #   runs-on: macos-latest
  #
  #   steps:
  #     - name: check out the codebase
  #       uses: actions/checkout@v2
  #
  #     - name: set up python 3
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.x"
  #
  #     - name: install test dependencies
  #       run: pip3 install pytest-testinfra molecule molecule-plugins[vagrant] yamllint ansible-lint
  #
  #     - name: Cache Vagrant boxes
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.vagrant.d/boxes
  #         key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
  #         restore-keys: |
  #           ${{ runner.os }}-vagrant-
  #
  #     - name: Show Vagrant version
  #       run: vagrant --version
  #
  #     # - name: Run vagrant up
  #     #   run: vagrant up
  #     #
  #     - name: run molecule tests
  #       run: molecule test -s macos
  #       working-directory: ./ansible/roles/go
  #       env:
  #         PY_COLORS: "1"
  #         ANSIBLE_FORCE_COLOR: "1"
