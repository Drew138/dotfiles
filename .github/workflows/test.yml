---
name: test ansible roles

on: [push]

jobs:
  check-roles:
    runs-on: ubuntu-latest
    outputs:
      roles: ${{ steps.roles.outputs.roles }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: install jq
        run: sudo apt-get install jq

      - name: list ansible roles
        id: roles
        run: |
          echo 'roles<<EOF' >> "${GITHUB_OUTPUT}"
          roles=$(ls -1 -d */ | sed 's:/$::' | jq -R -s 'split("\n")[:-1]')
          echo $roles>> "${GITHUB_OUTPUT}"
          echo 'EOF' >> "${GITHUB_OUTPUT}"
        working-directory: ./ansible/roles/

      - run: echo "${{ steps.roles.outputs.roles }}"

  test:
    needs: check-roles
    runs-on: macos-latest
    strategy:
      matrix:
        os: ["macos", "ubuntu"]
        # roles: ${{ fromJson(needs.check-roles.outputs.roles) }}
    env:
      PY_COLORS: "1"
      ANSIBLE_FORCE_COLOR: "1"
      OBJC_DISABLE_INITIALIZE_FORK_SAFETY: YES
    steps:
      - name: check out the codebase
        uses: actions/checkout@v2

      - name: setup ssh key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace

      - name: set up python 3
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: install test dependencies
        run: pip3 install \
          ansible \
          molecule \
          "molecule-plugins[vagrant]"

      # - name: run molecule tests
      #   run: molecule test -s ubuntu
      #   working-directory: ./ansible/roles/go
      #   env:
      #     PY_COLORS: "1"
      #     ANSIBLE_FORCE_COLOR: "1"
