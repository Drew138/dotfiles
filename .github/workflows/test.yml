---
# name: deploy laravel
# on:
#   push:
#     branches: [main]
#
# jobs:
#   example_matrix:
#     strategy:
#       matrix:
#         version: [10, 12, 14]
#         os: [macos-latest, windows-latest]
#     runs-on: ${{ matrix.os }}

name: test ansible roles

on: [push]

jobs:
  check-roles:
    runs-on: ubuntu-latest
    outputs:
      roles: ${{ steps.roles.outputs.roles }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: install jq
        run: sudo apt-get install jq

      - name: list ansible roles
        id: roles
        run: |
          echo 'roles<<EOF' >> "${GITHUB_OUTPUT}"
          roles=$(ls -1 -d */ | sed 's:/$::' | jq -R -s 'split("\n")[:-1]')
          echo $roles>> "${GITHUB_OUTPUT}"
          echo 'EOF' >> "${GITHUB_OUTPUT}"
        working-directory: ./ansible/roles/

      - run: echo "${{ steps.roles.outputs.roles }}"

  test-ubuntu:
    needs: check-roles
    runs-on: ubuntu-latest
    strategy:
      matrix:
        roles: ${{ fromJson(needs.check-roles.outputs.roles) }}
    steps:
      - name: check out the codebase
        uses: actions/checkout@v2

      - uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 12

      - name: set up python 3
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: install test dependencies
        run: pip3 install \
          pytest-testinfra \
          molecule \
          molecule-plugins[docker] \
          yamllint \
          ansible-lint

      - name: run molecule tests
        run: molecule test -s macos
        working-directory: ./ansible/roles/go
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
  #
  # test-macos:
  #   needs: check-roles
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       roles: ${{ fromJson(needs.check-roles.outputs.roles) }}
  #   steps:
  #     - name: check out the codebase
  #       uses: actions/checkout@v2
  #
  #     - name: set up python 3
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.x"
  #
  #     - name: install test dependencies
  #       run: pip3 install \
  #         pytest-testinfra \
  #         molecule \
  #         molecule-plugins[vagrant] \
  #         yamllint \
  #         ansible-lint
  #
  #     - name: set up homebrew
  #       id: set-up-homebrew
  #       uses: Homebrew/actions/setup-homebrew@master
  #
  #     - name: install virtualbox
  #       run: brew install --cask virtualbox
  #
  #     - name: create Vatgrantfile
  #       run: |
  #         echo 'Vagrant.configure("2") do |config|' > Vagrantfile
  #         echo '  config.vm.box = "yzgyyang/macOS-10.14"' >> Vagrantfile
  #         echo 'end' >> Vagrantfile
  #
  #     - name: Cache Vagrant boxes
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.vagrant.d/boxes
  #         key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
  #         restore-keys: |
  #           ${{ runner.os }}-vagrant-
  #
  #     - name: Show Vagrant version
  #       run: vagrant --version
  #
  #     - name: Run vagrant up
  #       run: vagrant up
  #
  #     - name: run molecule tests
  #       run: molecule test -s macos
  #       working-directory: ./ansible/roles/go
  #       env:
  #         PY_COLORS: "1"
  #         ANSIBLE_FORCE_COLOR: "1"
